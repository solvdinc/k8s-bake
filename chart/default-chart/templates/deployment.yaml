apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "application-chart.fullname" . }}
  labels:
    {{- include "application-chart.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "application-chart.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "application-chart.labels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ .Values.nameOverride }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- if or .Values.applicationSecrets .Values.applicationVariables }}
          env:
          {{- if .Values.applicationSecrets }}
          {{- range $key, $val := .Values.applicationSecrets }}
          - name: {{ $key }}
            valueFrom:
              secretKeyRef:
                name: {{ $.Values.nameOverride }}
                key: {{ $key }}
          {{- end }}
          {{- end }}
          {{- if .Values.applicationVariables }}
          {{- range $key, $val := .Values.applicationVariables }}
          - name: {{ $key }}
            valueFrom:
              configMapKeyRef:
                name: {{ $.Values.nameOverride }}
                key: {{ $key }}
          {{- end }}
          {{- end }}
          {{- end }}
          ports:
            - name: https
              containerPort: 443
              protocol: TCP
            {{- if .Values.service.targetPort }}
            - name: app
              containerPort: {{ .Values.service.targetPort }}
              protocol: TCP
            {{- end }}
            {{- range .Values.service.additionalPorts }}
            - name: {{ .name }}
              targetPort: {{ .targetPort }}
              protocol: {{ default "TCP" .protocol }}
            {{- end }}
          {{- if .Values.livenessProbe }}
          livenessProbe:
            {{- toYaml .Values.livenessProbe | nindent 12 }}
          {{- end }}
          {{- if .Values.readinessProbe }}
          readinessProbe:
            {{- toYaml .Values.readinessProbe | nindent 12 }}
          {{- end }}
          {{- if .Values.resources }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          {{- end }}
          volumeMounts:
            - name: tls
              mountPath: "/etc/ssl/nginx"
              readOnly: true
          {{- range .Values.volumes }}
            - name: {{ printf "%v-%v" $.Values.image.tag .name | trunc 63 | trimSuffix "-" }}
              mountPath: {{ .mountPath }}
              readOnly: {{ default "false" .readOnly }}
          {{- end }}  
      volumes:
        - name: tls
          persistentVolumeClaim: {{ printf "%v%v" .Values.nameOverride "-tls" }}
        {{- range .Values.volumes }}
        - name: {{ printf "%v-%v" $.Values.image.tag .name | trunc 63 | trimSuffix "-" }}
          persistentVolumeClaim: {{ printf "%v-%v-%v" $.Values.image.tag .name "claim" | trunc 63 | trimSuffix "-" }}
        {{- end }}  
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
